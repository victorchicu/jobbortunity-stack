services:
  # STACK
  mongo:
    image: mongo:8.0.3-noble
    ports:
      - "27017:27017"
    restart: "no"
    command: mongod --replSet rs0 --bind_ip_all --keyFile /etc/keyfile
    volumes:
      - mongo_data:/data/db
      - ./mongo/keyfile:/etc/keyfile
    networks:
      - jobbortunity
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    healthcheck:
      test: [ "CMD", "mongosh", "--eval", "db.adminCommand('ping')" ]
      retries: 10
      timeout: 10s
      interval: 10s
  mongo-init:
    image: mongo:8.0.3-noble
    networks:
      - jobbortunity
    depends_on:
      mongo:
        condition: service_healthy
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    command: >
      bash -c '
        sleep 5;
        mongosh --host mongo:27017 -u $$MONGO_INITDB_ROOT_USERNAME -p $$MONGO_INITDB_ROOT_PASSWORD --authenticationDatabase admin --eval "
          rs.initiate({
            _id: \"rs0\",
            members: [
              { _id: 0, host: \"mongo:27017\", priority: 2 },
            ]
          });
        " || mongosh --host mongo:27017 -u $$MONGO_INITDB_ROOT_USERNAME -p $$MONGO_INITDB_ROOT_PASSWORD --authenticationDatabase admin --eval "rs.status()";
        exit 0;
      '
    restart: "no"
  rabbitmq:
    image: rabbitmq:4.1.4-management
    ports:
      - "5672:5672" # AMQP
      - "15672:15672" # Management UI
      - "15674:15674" # STOMP WebSocket
      - "61613:61613" # STOMP
    restart: "no"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
      - rabbitmq_log:/var/log/rabbitmq
    networks:
      - jobbortunity
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER:-admin}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS:-admin}
      RABBITMQ_DEFAULT_VHOST: ${RABBITMQ_DEFAULT_VHOST:-/}
    command: >
      bash -c "
        rabbitmq-plugins enable --offline rabbitmq_management rabbitmq_stomp rabbitmq_web_stomp &&
        rabbitmq-server
      "
    healthcheck:
      test: [ "CMD", "rabbitmq-diagnostics", "-q", "ping" ]
      retries: 10
      timeout: 10s
      interval: 10s
volumes:
  mongo_data:
  rabbitmq_data:
  rabbitmq_log:
networks:
  jobbortunity:
    driver: bridge
